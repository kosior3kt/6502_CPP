It's not really design file, it's like a fusion between HLD, LLD and documentation

1. Syntax:

   This thing should be simmilar (if not exactly the same) to original asm for 6502

   if has 56 instructions (plus 1 custom not exposed to user)
   which support 13 addressing modes
2. Commands:

   ADC (Add with Carry)
   AND (Logical AND)
   ASL (Arithmetic Shift Left)
   BCC (Branch if Carry Clear)
   BCS (Branch if Carry Set)
   BEQ (Branch if Equal)
   BIT (Bit Test)
   BMI (Branch if Minus)
   BNE (Branch if Not Equal)
   BPL (Branch if Positive)
   BRK (Force Interrupt)
   BVC (Branch if Overflow Clear)
   BVS (Branch if Overflow Set)
   CLC (Clear Carry Flag)
   CLD (Clear Decimal Mode)
   CLI (Clear Interrupt Disable)
   CLV (Clear Overflow Flag)
   CMP (Compare Accumulator)
   CPX (Compare X Register)
   CPY (Compare Y Register)
   DEC (Decrement Memory)
   DEX (Decrement X Register)
   DEY (Decrement Y Register)
   EOR (Exclusive OR)
   INC (Increment Memory)
   INX (Increment X Register)
   INY (Increment Y Register)
   JMP (Jump)
   JSR (Jump to Subroutine)
   LDA (Load Accumulator)
   LDX (Load X Register)
   LDY (Load Y Register)
   LSR (Logical Shift Right)
   NOP (No Operation)
   ORA (Logical Inclusive OR)
   PHA (Push Accumulator)
   PHP (Push Processor Status)
   PLA (Pull Accumulator)
   PLP (Pull Processor Status)
   ROL (Rotate Left)
   ROR (Rotate Right)
   RTI (Return from Interrupt)
   RTS (Return from Subroutine)
   SBC (Subtract with Carry)
   SEC (Set Carry Flag)
   SED (Set Decimal Mode)
   SEI (Set Interrupt Disable)
   STA (Store Accumulator)
   STX (Store X Register)
   STY (Store Y Register)
   TAX (Transfer Accumulator to X)
   TAY (Transfer Accumulator to Y)
   TSX (Transfer Stack Pointer to X)
   TXA (Transfer X to Accumulator)
   TXS (Transfer X to Stack Pointer)
   TYA (Transfer Y to Accumulator)

3. Addressing modes:
   
   Accumulator
      Usage: OPC A

   Immediate
      Usage: OPC #$BB

   Zero Page
      Usage: OPC $LL

   Zero Page,X
      Usage: OPC $LL,X

   Zero Page,Y
      Usage: OPC $LL,Y

   Absolute
      Usage: OPC $HHLL

   Absolute,X
      Usage: OPC $HHLL,X

   Absolute,Y
      Usage: OPC $HHLL,Y

   Indirect
      Usage: OPC ($HHLL)

   Indexed Indirect (Indirect,X)
      Usage: OPC ($LL,X)

   Indirect Indexed (Indirect),Y
      Usage: OPC ($LL),Y

   Relative
      Usage: OPC $BB

   Implied
      Usage: OPC

   ((where OPC is opcode HH means high byte and LL mean lowbyte))

4. Compatibility Matrix:

            | A  | #$ | $LL | $LL,X | $LL,Y | $HHLL | $HHLL,X | $HHLL,Y | ($HHLL) | ($LL,X) | ($LL),Y | $BB | Implied
   ---------|----|----|-----|-------|-------|-------|---------|---------|---------|---------|---------|-----|---------
   ADC      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   AND      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   ASL      | X  |    |  X  |   X   |       |   X   |         |         |         |         |         |     | X
   BCC      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BCS      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BEQ      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BIT      |    |    |  X  |   X   |       |   X   |         |         |         |         |         |     | 
   BMI      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BNE      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BPL      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BRK      |    |    |     |       |       |       |         |         |         |         |         |     | X
   BVC      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   BVS      |    |    |     |       |       |       |         |         |         |         |         |  X  | 
   CLC      |    |    |     |       |       |       |         |         |         |         |         |     | X
   CLD      |    |    |     |       |       |       |         |         |         |         |         |     | X
   CLI      |    |    |     |       |       |       |         |         |         |         |         |     | X
   CLV      |    |    |     |       |       |       |         |         |         |         |         |     | X
   CMP      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   CPX      |    | X  |  X  |       |       |   X   |         |         |         |         |         |     | 
   CPY      |    | X  |  X  |       |       |   X   |         |         |         |         |         |     | 
   DEC      |    |    |  X  |   X   |       |   X   |         |         |         |         |         |     | 
   DEX      |    |    |     |       |       |       |         |         |         |         |         |     | X
   DEY      |    |    |     |       |       |       |         |         |         |         |         |     | X
   EOR      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   INC      |    |    |  X  |   X   |       |   X   |         |         |         |         |         |     | 
   INX      |    |    |     |       |       |       |         |         |         |         |         |     | X
   INY      |    |    |     |       |       |       |         |         |         |         |         |     | X
   JMP      |    |    |     |       |       |   X   |         |         |    X    |         |         |     | 
   JSR      |    |    |     |       |       |   X   |         |         |         |         |         |     | 
   LDA      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   LDX      |    | X  |  X  |       |   X   |   X   |         |    X    |         |         |         |     | 
   LDY      |    | X  |  X  |   X   |       |   X   |    X    |         |         |         |         |     | 
   LSR      | X  |    |  X  |   X   |       |   X   |         |         |         |         |         |     | X
   NOP      |    |    |     |       |       |       |         |         |         |         |         |     | X
   ORA      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   PHA      |    |    |     |       |       |       |         |         |         |         |         |     | X
   PHP      |    |    |     |       |       |       |         |         |         |         |         |     | X
   PLA      |    |    |     |       |       |       |         |         |         |         |         |     | X
   PLP      |    |    |     |       |       |       |         |         |         |         |         |     | X
   ROL      | X  |    |  X  |   X   |       |   X   |         |         |         |         |         |     | X
   ROR      | X  |    |  X  |   X   |       |   X   |         |         |         |         |         |     | X
   RTI      |    |    |     |       |       |       |         |         |         |         |         |     | X
   RTS      |    |    |     |       |       |       |         |         |         |         |         |     | X
   SBC      |    | X  |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   SEC      |    |    |     |       |       |       |         |         |         |         |         |     | X
   SED      |    |    |     |       |       |       |         |         |         |         |         |     | X
   SEI      |    |    |     |       |       |       |         |         |         |         |         |     | X
   STA      |    |    |  X  |   X   |       |   X   |    X    |    X    |         |    X    |    X    |     | 
   STX      |    |    |  X  |       |   X   |   X   |         |         |         |         |         |     | 
   STY      |    |    |  X  |   X   |       |   X   |         |         |         |         |         |     | 
   TAX      |    |    |     |       |       |       |         |         |         |         |         |     | X
   TAY      |    |    |     |       |       |       |         |         |         |         |         |     | X
   TSX      |    |    |     |       |       |       |         |         |         |         |         |     | X
   TXA      |    |    |     |       |       |       |         |         |         |         |         |     | X
   TXS      |    |    |     |       |       |       |         |         |         |         |         |     | X
   TYA      |    |    |     |       |       |       |         |         |         |         |         |     | X

5. Nota Bene:
   my desing allows for creating labels. Label will internally be translated to Virtual Program Counter.
   VPC Arithmetic will then be used for branching and jumping

   label is a word consisting of only lowercase characters with ':' at the end.
   There can't be a space between a word and ':'
   
   For example:

   -  loop:
   -  begin:

6. MISC

   Compiled code will be transalted into an .aa file (aa stands for autistic assembly)
   the same code then needs to be read by processor model in order to be executed...



   
